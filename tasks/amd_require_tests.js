/*
 * grunt-amd-require-tests
 * https://github.com/bruce.harris/grunt-amd-require-tests
 *
 * Copyright (c) 2014 Bruce Harris
 * Licensed under the MIT license.
 */

'use strict';

var _ = require('lodash'),
    fs = require('fs');

module.exports = function(grunt) {

  grunt.registerMultiTask('amd_require_tests', 'Finds test files and "require"s"s them', function() {
    // Merge task-specific and/or target-specific options with these defaults.
    var options = this.options({
      path: './',
      templateFile: null
    });

    // Iterate over all specified file groups.
    this.files.forEach(function(f) {
      var srcFiles = grunt.file.expand({ cwd: options.path }, f.orig.src);
      var fileList = srcFiles.map(function(file, i, arr) {
        return {
          fullName: file,
          name: file.replace(/\.js$/i, ''),
          comma: i < (arr.length - 1) ? ',' : ''
        }
      });

      var defaultTemplate = '\
// **** do not edit - generated file **\n\
// This file generated by grunt-amd-require-tests\n\
// We use define rather than require as the former works with relative paths\n\
define([\n<%\
_.forEach(files, function(file, i, arr) {%>\
  \'./${ file.name }\'${ file.comma }\n<%\
}); %>\
], function(){\n\
  \'use strict\';\n\
  return null;\n\
});';

      var template = options.templateFile ? fs.readFileSync(options.templateFile) : defaultTemplate;
      var content = _.template(template, { files: fileList });

      grunt.file.write(f.dest, content);

      grunt.log.writeln('File "' + f.dest + '" created.');
    });
  });

};